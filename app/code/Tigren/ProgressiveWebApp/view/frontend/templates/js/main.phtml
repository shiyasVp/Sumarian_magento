<?php
/**
 * @copyright Copyright (c) 2017 www.tigren.com
 */
?>
<head>
    <meta name="theme-color" content="<?php echo $block->getThemeColor() ?>"/>
</head>
<script src="https://www.gstatic.com/firebasejs/<?php echo $block->getFcmVersion() ?>/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/<?php echo $block->getFcmVersion() ?>/firebase-auth.js"></script>
<script src="https://www.gstatic.com/firebasejs/<?php echo $block->getFcmVersion() ?>/firebase-database.js"></script>
<script src="https://www.gstatic.com/firebasejs/<?php echo $block->getFcmVersion() ?>/firebase-firestore.js"></script>
<script src="https://www.gstatic.com/firebasejs/<?php echo $block->getFcmVersion() ?>/firebase-messaging.js"></script>
<?php echo $block->getFirebaseScript(); ?>
<script>
    const messaging = firebase.messaging();
</script>
<?php $ajaxUrl = $block->getUrl('pwa/index/subscribeTopic'); ?>
<script type="text/javascript">
    require(["jquery"], function ($) {
        // Register Service Worker
        if ('serviceWorker' in navigator) {
            window.addEventListener('load', function () {
                var baseUrl = '<?php echo $block->getBaseUrl() ?>';
                navigator.serviceWorker.register(baseUrl + 'serviceWorker.js').then(function (registration) {
                    // Registration was successful
                    console.log('ServiceWorker registration successful with scope: ', registration.scope);
                }, function (err) {
                    // registration failed :(
                    console.log('ServiceWorker registration failed: ', err);
                });
            });
        }

        function subscriberTopic() {
            messaging.getToken()
                .then(function (currentToken) {
                    if (currentToken) {
                        var subUrl = 'https://iid.googleapis.com/iid/v1/' + currentToken;
                        // subscriber topic
                        $.ajax({
                            url: '<?php echo $ajaxUrl ?>',
                            type: 'POST',
                            dataType: 'json',
                            data: {subUrl: subUrl},
                            success: function (response) {
                                console.log(response);
                            },
                            error: function () {
                                console.log("Cannot get data");
                            }
                        });
                    } else {
                        console.log('No Instance ID token available. Request permission to generate one.');
                    }
                })
                .catch(function (err) {
                    console.log('An error occurred while retrieving token. ', err);
                });
        }

        navigator.serviceWorker && navigator.serviceWorker.ready.then(function (serviceWorkerRegistration) {

            window.addEventListener('beforeinstallprompt', function (e) {
                // beforeinstallprompt Event fired

                // e.userChoice will return a Promise.
                // For more details read: https://developers.google.com/web/fundamentals/getting-started/primers/promises
                e.userChoice.then(function (choiceResult) {

                    console.log(choiceResult.outcome);

                    if (choiceResult.outcome === 'dismissed') {
                        console.log('User cancelled home screen install');
                    }
                    else {
                        console.log('User added to home screen');
                    }
                });
            });

            messaging.useServiceWorker(serviceWorkerRegistration);
            messaging.requestPermission()
                .then(function () {
                    console.log('Notification permission granted.');
                    subscriberTopic();
                })
                .catch(function (err) {
                    console.log('Unable to get permission to notify.', err);
                });

            messaging.onMessage(function (payload) {
                console.log("Message received. ");
                if (payload.notification) {
                    var notificationTitle = payload.notification.title;
                    var notificationOptions = {
                        body: payload.notification.body,
                        icon: payload.notification.icon,
                        badge: payload.notification.icon
                    };
                    serviceWorkerRegistration.showNotification(notificationTitle,
                        notificationOptions);
                }
            });

        });

    });
</script>

